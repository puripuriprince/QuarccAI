{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lucas\\\\Desktop\\\\CONCORDIA\\\\QUARCC\\\\LAB\\\\react_project_files\\\\src\\\\contexts\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nconst API_URL = 'http://localhost:5000/api';\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const signup = async userData => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(`${API_URL}/auth/signup`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userData)\n      });\n      const data = await response.json();\n      if (!response.ok) throw new Error(data.error || 'Signup failed');\n      return data;\n    } catch (err) {\n      setError(err.message);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const signin = async credentials => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(`${API_URL}/auth/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(credentials)\n      });\n      const data = await response.json();\n      if (!response.ok) throw new Error(data.error || 'Login failed');\n      setUser(data.user);\n      localStorage.setItem('token', data.token);\n      return data;\n    } catch (err) {\n      setError(err.message);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const signout = () => {\n    setUser(null);\n    localStorage.removeItem('token');\n  };\n  const queryAI = async query => {\n    const token = localStorage.getItem('token');\n    try {\n      const response = await fetch(`${API_URL}/query`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          query\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) throw new Error(data.error || 'Query failed');\n      return data;\n    } catch (err) {\n      setError(err.message);\n      throw err;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loading,\n      error,\n      signup,\n      signin,\n      signout,\n      queryAI\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n}\n_s(AuthProvider, \"wJbgydKmzProwqZ2PuaEI7aaFyo=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","AuthContext","API_URL","AuthProvider","children","_s","user","setUser","loading","setLoading","error","setError","signup","userData","response","fetch","method","headers","body","JSON","stringify","data","json","ok","Error","err","message","signin","credentials","localStorage","setItem","token","signout","removeItem","queryAI","query","getItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/lucas/Desktop/CONCORDIA/QUARCC/LAB/react_project_files/src/contexts/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\n\r\nconst AuthContext = createContext(null);\r\n\r\nconst API_URL = 'http://localhost:5000/api';\r\n\r\nexport function AuthProvider({ children }) {\r\n    const [user, setUser] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const signup = async (userData) => {\r\n        setLoading(true);\r\n        setError(null);\r\n        try {\r\n            const response = await fetch(`${API_URL}/auth/signup`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(userData),\r\n            });\r\n            const data = await response.json();\r\n            if (!response.ok) throw new Error(data.error || 'Signup failed');\r\n            return data;\r\n        } catch (err) {\r\n            setError(err.message);\r\n            throw err;\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const signin = async (credentials) => {\r\n        setLoading(true);\r\n        setError(null);\r\n        try {\r\n            const response = await fetch(`${API_URL}/auth/login`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(credentials),\r\n            });\r\n            const data = await response.json();\r\n            if (!response.ok) throw new Error(data.error || 'Login failed');\r\n            \r\n            setUser(data.user);\r\n            localStorage.setItem('token', data.token);\r\n            return data;\r\n        } catch (err) {\r\n            setError(err.message);\r\n            throw err;\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const signout = () => {\r\n        setUser(null);\r\n        localStorage.removeItem('token');\r\n    };\r\n\r\n    const queryAI = async (query) => {\r\n        const token = localStorage.getItem('token');\r\n        try {\r\n            const response = await fetch(`${API_URL}/query`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${token}`\r\n                },\r\n                body: JSON.stringify({ query })\r\n            });\r\n            const data = await response.json();\r\n            if (!response.ok) throw new Error(data.error || 'Query failed');\r\n            return data;\r\n        } catch (err) {\r\n            setError(err.message);\r\n            throw err;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ \r\n            user, \r\n            loading, \r\n            error, \r\n            signup, \r\n            signin, \r\n            signout,\r\n            queryAI \r\n        }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n}\r\n\r\nexport const useAuth = () => useContext(AuthContext); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}